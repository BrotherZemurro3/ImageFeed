import UIKit
import Foundation
import Kingfisher




final class ProfileViewController: UIViewController {
    
    private let nameLabel = UILabel()
    private let loginLabel = UILabel()
    private let descriptionLabel = UILabel()
    private let profileService = ProfileService.shared
    private let profileImage = UIImageView()
    private var profileimageSeviceObserver: NSObjectProtocol?
    
    override func viewDidLoad() {
            super.viewDidLoad()
            view.backgroundColor = UIColor(named: "YP Black")
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ observer –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∫–∏
            profileimageSeviceObserver = NotificationCenter.default
                .addObserver(
                    forName: ProfileImageService.didChangeNotification,
                    object: nil,
                    queue: .main
                ) { [weak self] _ in
                    guard let self = self else { return }
                    self.updateAvatar()
                }
        
        print("üöÄ –í—ã–∑—ã–≤–∞–µ–º updateAvatar()")
        updateAvatar()
        setupUI()
        
        
            
          
           
            // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
            if let profile = profileService.profile {
                updateProfileDetails(profile: profile)
            } else {
                print("–û—à–∏–±–∫–∞: –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
            }
        }

        private func setupUI() {
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ profileImage
            profileImage.tintColor = .gray
            profileImage.translatesAutoresizingMaskIntoConstraints = false
            view.addSubview(profileImage)
            NSLayoutConstraint.activate([
                profileImage.leadingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.leadingAnchor, constant: 16),
                profileImage.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor, constant: 32),
                profileImage.widthAnchor.constraint(equalToConstant: 70),
                profileImage.heightAnchor.constraint(equalToConstant: 70),
            ])
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ logoutButton
            let logoutButton = UIButton(type: .system)
            logoutButton.setImage(UIImage(named: "logoutButton"), for: .normal)
            logoutButton.tintColor = .ypRed
            logoutButton.translatesAutoresizingMaskIntoConstraints = false
            view.addSubview(logoutButton)
            NSLayoutConstraint.activate([
                logoutButton.trailingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.trailingAnchor, constant: -20),
                logoutButton.centerYAnchor.constraint(equalTo: profileImage.centerYAnchor),
            ])
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nameLabel
            nameLabel.textColor = .white
            nameLabel.font = .systemFont(ofSize: 23, weight: .bold)
            nameLabel.translatesAutoresizingMaskIntoConstraints = false
            view.addSubview(nameLabel)
            NSLayoutConstraint.activate([
                nameLabel.leadingAnchor.constraint(equalTo: profileImage.leadingAnchor),
                nameLabel.topAnchor.constraint(equalTo: profileImage.bottomAnchor, constant: 8),
            ])
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ loginLabel
            loginLabel.textColor = .lightGray
            loginLabel.font = .systemFont(ofSize: 13, weight: .regular)
            loginLabel.translatesAutoresizingMaskIntoConstraints = false
            view.addSubview(loginLabel)
            NSLayoutConstraint.activate([
                loginLabel.leadingAnchor.constraint(equalTo: profileImage.leadingAnchor),
                loginLabel.topAnchor.constraint(equalTo: nameLabel.bottomAnchor, constant: 8),
            ])
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ descriptionLabel
            descriptionLabel.textColor = .white
            descriptionLabel.font = .systemFont(ofSize: 13, weight: .regular)
            descriptionLabel.translatesAutoresizingMaskIntoConstraints = false
            view.addSubview(descriptionLabel)
            NSLayoutConstraint.activate([
                descriptionLabel.leadingAnchor.constraint(equalTo: profileImage.leadingAnchor),
                descriptionLabel.topAnchor.constraint(equalTo: loginLabel.bottomAnchor, constant: 8),
            ])
        }

    func updateAvatar() {
        guard let profileImageURL = ProfileImageService.shared.avatarURL else {
            print("–û—à–∏–±–∫–∞: avatarURL –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ URL –µ—Å—Ç—å
            return
        }
        print("avatarURL: \(profileImageURL)")  // –õ–æ–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ URL –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
        
        guard let url = URL(string: profileImageURL) else {
            print("–û—à–∏–±–∫–∞: avatarURL –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ URL: \(profileImageURL)")  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ URL
            return
        }
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Kingfisher
        profileImage.kf.setImage(with: url,
                                 placeholder: UIImage(named: "UserPhoto"),
                                 options: [.transition(.fade(3))],
                                 completionHandler: { result in
            switch result {
            case .success(let value):
                print("–ê–≤–∞—Ç–∞—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: \(value.source.url?.absoluteString ?? "Unknown URL")")
            case .failure(let error):
                print("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏: \(error.localizedDescription)")  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
            }
        })
    }

    func updateProfileDetails(profile: Profile) {
        print("[ProfileViewController]: –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å - \(profile)")  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        nameLabel.text = profile.name.isEmpty ? "No Name" : profile.name
        loginLabel.text = profile.loginName
        descriptionLabel.text = profile.bio ?? "No Bio"
    }
    }
