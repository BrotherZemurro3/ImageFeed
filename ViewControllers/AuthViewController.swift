import UIKit
import Foundation

final class AuthViewController: UIViewController {
    
 
    weak var delegate: AuthViewControllerDelegate?
    private let showWebViewSegueIdentifier = "showWebView"
    private let oauth2Service = OAuth2Service.shared
    
    @IBOutlet weak var entryButton: UIButton!
    
    // MARK: - Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        entryButton.titleLabel?.font = UIFont.systemFont(ofSize: 17, weight: .bold)
        
        print("üü¢ –°–æ–∑–¥–∞–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä AuthViewController: \(self)")
        if delegate == nil {
            print("‚ö†Ô∏è delegate –≤ AuthViewController —Ä–∞–≤–µ–Ω nil –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ WebView!")
        } else {
            print("‚úÖ delegate –≤ AuthViewController –ù–ï –ø–æ—Ç–µ—Ä—è–ª—Å—è –ø–æ—Å–ª–µ WebView!")
        }
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        print("‚úÖ –ü–æ—è–≤–∏–ª—Å—è AuthViewController: \(self), delegate: \(String(describing: delegate))")
    }
    
    // MARK: - Navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == showWebViewSegueIdentifier {
            print("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ WebViewViewController")
            
            guard let webViewViewController = segue.destination as? WebViewViewController else {
                assertionFailure("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤–µ—Å—Ç–∏ segue.destination –∫ WebViewViewController")
                return
            }
            
            webViewViewController.delegate = self
            
            if webViewViewController.delegate == nil {
                print("‚ö†Ô∏è delegate –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ prepare(for:sender:)!")
            } else {
                print("‚úÖ delegate —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ prepare(for:sender:)")
            }
        } else {
            super.prepare(for: segue, sender: sender)
        }
    }
    
}

// MARK: - –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–ª–µ–≥–∞—Ç–∞ WebViewViewControllerDelegate
extension AuthViewController: WebViewViewControllerDelegate {
    func webViewViewController(_ vc: WebViewViewController, didAuthenticateWithCode code: String) {
        print("üü° WebView –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É, –∫–æ–¥: \(code)")
        
        oauth2Service.fetchAuthToken(code: code) { [weak self] result in
            guard let self = self else { return }
            
            DispatchQueue.main.async {
                switch result {
                case .success(let token):
                    print("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: \(token)")
                    
                    if let navController = self.navigationController {
                        print("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º popViewController")
                        navController.popViewController(animated: true)
                    } else {
                        print("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º dismiss")
                        vc.dismiss(animated: true)
                    }
                    
                    if self.delegate == nil {
                        print("‚ö†Ô∏è delegate –≤ AuthViewController —Ä–∞–≤–µ–Ω nil!")
                    } else {
                        print("‚úÖ delegate –≤—ã–∑–≤–∞–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –¥–∞–ª—å—à–µ")
                        self.delegate?.didAuthenticate(self)
                    }
                    
                case .failure(let error):
                    print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: \(error.localizedDescription)")
                    self.showAuthErrorAlert()
                }
            }
        }
    }
    
    func webViewViewControllerDidCancel(_ vc: WebViewViewController) {
        print("–û—Ç–º–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        print("–ó–∞–∫—Ä—ã–≤–∞–µ–º WebView –∏ –ø–µ—Ä–µ–¥–∞—ë–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
        vc.dismiss(animated: true)
        self.delegate?.didAuthenticate(self)
    }
    
    
    
    // MARK: - –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    private func showAuthErrorAlert() {
        let alert = UIAlertController(
            title: "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
            message: "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ö–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
            preferredStyle: .alert
        )
        alert.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
        present(alert, animated: true, completion: nil)
    }
}
